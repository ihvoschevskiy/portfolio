import { TStackType } from '@features/Stack/types/types'
import React, { FC } from 'react'

interface IProps {
  type: TStackType
}

export const GitIco: FC<IProps> = ({ type }) => {
  if (type === 'hex')
    return (
      <svg
        style={{ width: '100%', height: '100%' }}
        width="92"
        height="107"
        viewBox="0 0 92 107"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          d="M48.4305 31.6125L48.4303 31.6124C47.6143 30.7961 46.2902 30.7956 45.4728 31.6127L41.8286 35.2577L46.2374 39.6666C47.7035 39.3873 49.2789 39.8115 50.4179 40.951C51.5633 42.097 51.9858 43.6847 51.6969 45.1579L56.2042 49.6647C57.677 49.3761 59.2659 49.7973 60.4117 50.9448C62.2384 52.7721 62.2378 55.7323 60.4115 57.56L60.4111 57.5604C58.5829 59.3879 55.6224 59.3877 53.7939 57.5606L53.7933 57.56C52.5922 56.3577 52.1821 54.6644 52.5617 53.1278L49.7385 50.3049V60.3765C49.9772 60.5383 50.2053 60.7249 50.4177 60.9373C52.245 62.7645 52.2444 65.7251 50.4181 67.5534L50.4176 67.5539C48.5907 69.3801 45.6283 69.3805 43.8021 67.5537L43.8017 67.5533C41.9757 65.7246 41.9748 62.7641 43.8024 60.9372L43.8027 60.9368C44.0816 60.6583 44.3883 60.4212 44.7144 60.2265V48.2776C44.3891 48.0838 44.0821 47.8469 43.8018 47.5658L48.4305 31.6125ZM48.4305 31.6125L69.3875 52.5685C70.2042 53.3852 70.2042 54.7104 69.3875 55.5271L48.5284 76.3861C48.5283 76.3862 48.5282 76.3863 48.5281 76.3864C47.7101 77.2035 46.3865 77.2027 45.5708 76.3866L45.5706 76.3864L24.6125 55.4299C24.6125 55.4299 24.6125 55.4299 24.6125 55.4299C23.796 54.6134 23.7956 53.289 24.6128 52.471L38.2758 38.8096L42.5758 43.1104C42.187 44.652 42.5915 46.3553 43.8012 47.5652L48.4305 31.6125Z"
          fill="currentColor"
          fillOpacity="0.2"
          stroke="currentColor"
          strokeWidth="2"
        />
      </svg>
    )

  if (type === 'square')
    return (
      <svg xmlns="http://www.w3.org/2000/svg" width="49" height="48" viewBox="0 0 49 48" fill="none">
        <path
          d="M24.7183 9.31074L24.7182 9.31057C24.3044 8.89665 23.6327 8.89621 23.2178 9.31087L21.024 11.5052L23.6069 14.0881C24.6366 13.9469 25.7196 14.2697 26.5147 15.0652C27.3143 15.8651 27.6362 16.9564 27.4889 17.9913L30.2508 20.7529C31.2854 20.6057 32.3776 20.9268 33.1776 21.728C34.5254 23.0764 34.5249 25.2608 33.1773 26.6094L33.1769 26.6098C31.8279 27.9582 29.6432 27.958 28.2941 26.6099L28.2935 26.6093C27.4556 25.7705 27.1396 24.6081 27.3439 23.526L26.1593 22.3415V28.0803C26.2827 28.1737 26.4016 28.2767 26.5146 28.3896C27.863 29.7381 27.8624 31.9228 26.5149 33.2717L26.5144 33.2722C25.1664 34.6198 22.9803 34.6202 21.6326 33.272L21.6322 33.2716C20.2851 31.9224 20.2841 29.7377 21.6329 28.3895L21.6333 28.3891C21.7919 28.2307 21.9629 28.0904 22.1433 27.9685V20.3684C21.9632 20.2469 21.792 20.1064 21.6325 19.9465M24.7183 9.31074L22.3399 19.2397M24.7183 9.31074L38.69 23.2817C38.69 23.2817 38.69 23.2817 38.69 23.2817C39.1043 23.696 39.1043 24.3684 38.69 24.7827L24.7837 38.689C24.3684 39.1039 23.6969 39.1033 23.2832 38.6894L23.2831 38.6893L9.31072 24.718M24.7183 9.31074L9.31069 24.7179M21.6325 19.9465C21.6322 19.9463 21.632 19.946 21.6317 19.9458L22.3399 19.2397M21.6325 19.9465C21.6326 19.9467 21.6328 19.9468 21.6329 19.947L22.3399 19.2397M21.6325 19.9465C20.7881 19.1022 20.4754 17.9327 20.6858 16.8468M22.3399 19.2397C21.6144 18.5146 21.44 17.4497 21.8119 16.5588M20.6858 16.8468L21.1047 17.2659L21.8119 16.5588M20.6858 16.8468C20.7302 16.6174 20.798 16.3917 20.8891 16.1735L21.8119 16.5588M20.6858 16.8468L21.8119 16.5588M9.31069 24.7179L8.60361 25.4251L9.31072 24.718M9.31069 24.7179C9.3107 24.7179 9.31071 24.7179 9.31072 24.718M9.31069 24.7179L9.31072 24.718M18.8912 13.6375L18.1929 12.9391L18.1841 12.9303L17.477 13.6374L18.184 14.3446L18.8912 13.6375ZM9.31068 23.217L9.31103 23.2166L8.60361 22.5098L9.31068 23.217Z"
          fill="currentColor"
          fillOpacity="0.1"
          stroke="currentColor"
          strokeWidth="1.5"
        />
      </svg>
    )
}
